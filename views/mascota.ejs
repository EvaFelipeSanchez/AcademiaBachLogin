<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>AcademiaBach</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
      /* Estilos para el menú sidebar */
      .sidebar {
          height: 150%;
          width: 9%;
          position: fixed;
          top: 0;
          left: -150%; 
          background-color: #acc1e5;
          transition: 0.3s;
      }

      .sidebar a {
          padding: 7%;
          text-decoration: none;
          font-size: 1vw;
          color: #1c4b6a;
          display: block;
      }

      .sidebar img {
      width: 100%;
      height: auto;
      }

      .sidebar a:hover {
          background-color: #acc1e5;
      }


      .content {
          margin-left: 5%;
          padding: 7%;
          z-index: 10;
      }


      .content a img {
        position: fixed;
        left: 1%;
        top: 1%;
        width: 7%;
        height: auto;
        z-index: 3;
        }

        body {
            background-image: url('/images/Fondo3.png'); 
            background-size: cover; 
            background-repeat: no-repeat; 
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
            overflow: hidden
        }
        


        .count {

            height: 0;
           width: 10%;          
            display: flex;
            justify-content: center;
            align-items: center;
            top: 50%; /* Centrar verticalmente en todos los dispositivos */
            left: 50%; /* Centrar horizontalmente en todos los dispositivos */
            transform: translate(-50%, -50%); /* Centrar en la mitad de la pantalla */
            color: rgb(31, 39, 78);
                font-family: 'Arial', sans-serif; 
        }

        .store {
            position: fixed;
            top: 15%;
            left: 20%; 
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            transform: translate(-10%, 5%);
            overflow-y: auto; 
            max-height: 80vh;
        }

        .item {
            background-color: #acc1e5;
            border: 1px solid #1b184f;
            text-align: center;
        }


        .store img {
            max-width: 50%;
        }

        .price {
            font-size: 1.2vw;

        }

        .activar-button {
            background-color: #213953;
            color: #fff;
            padding: 1% 5%;
            border: none;
            cursor: pointer;
        }

        .tiendabar{

            width: 7%;
            background-color: #acc1e5;
            border: 1px solid #1b184f;
            padding: 0%;

            position: fixed;
            display: flex;
            justify-content: center;
            align-items: center;
            top: 9%; 
            left: 75%;
            transform: translate(-50%, -50%); 
            color: rgb(31, 39, 78);

        }

        .tiendabar img {
        width: 100%;
        height: auto;
        }

       /* 
        .cementerio{
            margin-bottom: 140px; 
            width: 130%;
            background-color: #acc1e5;
            border: 1px solid #1b184f;
            padding: 8px;

            position: fixed;
            display: flex;
            justify-content: center;
            align-items: center;
            top: 9%; 
            left: 85%;
            transform: translate(-50%, -50%); 
            color: rgb(31, 39, 78);

        }

        .cementerio img {
        width: 110px;
        height: 110px;
        }
        */
       
        .punto {
        font-size: 2vw;
        height: 0%;
        margin-top: 2%;
        width: 10%;
   
        padding-top: 3%; 
        padding-right: 7%;
        padding-bottom: 2.5%;
        padding-left: 9%; 

        position: fixed;
        display: flex;
        justify-content: center;
        align-items: center;
        top: 7%;
        left: 63%;
        transform: translate(-50%, -50%);
        font-family: 'Arial', sans-serif;
        background-color: rgb(52, 60, 104);
        color: #fff;
        }

        .moneda-image {
            font-size: 2vw;
        text-align: center;
        height: 0;
        margin-top: 1%;
        width: 2%;


        position: fixed;
        display: flex;
        justify-content: center;
        align-items: center;
        top: 40%;
        left: 25%;
        transform: translate(-50%, -50%);
        font-family: 'Arial', sans-serif;

        color: #fff;
        z-index: 4;
   
        }
        .punto .contenido {
        flex: 1; /* El contenido ocupa el espacio restante */
        }

        .cerrar {
             position: fixed;
            display: flex;
            justify-content: center;
            align-items: center;
            top: 9%; 
            left: 91%; 
            transform: translate(-50%, -50%); 
            color: rgb(31, 39, 78);

        }

        .cerrar img {
            max-width: 61%;
            height: auto;
        }



        .parent {
            display: grid;
            grid-template-columns: repeat(8, 1fr);
            grid-template-rows: repeat(8, 1fr);
            grid-column-gap: 6px;
            grid-row-gap: 28px;
            }

            .div1 { grid-area: 1 / 1 / 10 / 2; }
            .div2 { grid-area: 2 / 6 / 3 / 7; }
            .div3 { grid-area: 2 / 7 / 3 / 8; }
            .div4 { grid-area: 3 / 3 / 8 / 8; }


      
  </style>
  </head>
    
  <body>

    <div class="parent">
        <div class="div1"> 
            <div class="sidebar" id="sidebar">
                <a></a> <a></a>  <a></a> <a></a> <a></a> <a></a> <a></a> <a></a>
                <a href="#" onclick="checklist()"><img src="/images/listaicono.png" alt="Icono Checklist"></a>
                <a href="#" onclick="index()"><img src="/images/homeicono.png" alt="Icono Tienda"></a>
                     <a href="#" onclick="cementerio()"><img src="/images/Tumba.png" alt="Icono Cementerio"></a>
              </div>
          
              <div class="content" >
                  <!-- Contenido principal de tu página -->
                  <a href="#" onclick="toggleSidebar()"><img src="/images/logo.png" alt="Botón de menú"></a>
              </div>
        </div>
        <div class="div2"> 

            <div class="punto">
                <p class="moneda-image">Puntos:</p>  
                <div class="puntostexto">
                    <p id="puntosTotales">00</p>
                </div>
            </div>
        </div>
        <div class="div3"> 
            <div class="tiendabar" id="tiendabar">
                <a href="#" onclick="tienda()"><img src="/images/homeicono.png" alt="Icono de tienda"></a>
              </div>
              <div class="cerrar" id="cerrar">
                <a></a> <a></a>  <a></a> <a></a> <a></a> <a></a> <a></a> <a></a>
                <a href="#" onclick="cerrar()"><img src="/images/cerrar.png" alt="IconoCerrar"></a>
            </div>
            
        </div>
        <div class="div4"> 
            <div class="store">

            </div>
        </div>
    </div>









  <script>
      function toggleSidebar() {
          var sidebar = document.getElementById('sidebar');
          if (sidebar.style.left === '0px') {
              sidebar.style.left = '-250px';
          } else {
              sidebar.style.left = '0px';
          }
      }
  </script>

<script>
        // Obtener la tienda (div con clase "store")
        var store = document.querySelector('.store');

        // Obtener todos los elementos con clase "item" dentro de la tienda
        var items = store.querySelectorAll('.item');
        var userId = '<%= user.id %>';



        fetch('/' + userId +'/mascotas')
        .then(response => response.json())
        .then(data => {
            console.log('Lista de mascotas:', data);
            
        // Crear una lista local para almacenar los elementos de la tienda
        //var listaLocal = JSON.parse(localStorage.getItem('storeElements')) || [];
        //var listaLocal = [];
        //localStorage.setItem('storeElements', JSON.stringify(listaLocal));

        if (data.length === 0) {
            items.forEach(function (item, index) {
            var imagen = item.querySelector('img').src;
            var segundaImagen = item.querySelector('.segunda-imagen').src;
            var nombre = item.querySelector('.nombre').textContent;

            var elementoTienda = {
                userId: userId,
                nombre: nombre,
                imagenPrincipal: imagen,
                segundaImagen: segundaImagen,
                
            };

            
            fetch('/' + userId + '/mascotas', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(elementoTienda),
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Tarea guardada:', data);
                    })
                    .catch(error => console.error('Error al guardar la tarea:', error));


            /*
            if (!localStorage.getItem('funcionEjecutada')) { ///
            window.onload = function() {
                window.location.href = "tienda.ejs";
                localStorage.setItem('funcionEjecutada', 'true');
            };
            }  */

            //listaLocal.push(elementoTienda);
        });

        } 
        })
        .catch(error => console.error('Error al obtener la lista de tareas:', error));

        //var storeElements = JSON.parse(localStorage.getItem('storeElements')) || [];

       // window.onload = function() {

        
            function elementYaExisteEnMascota(elementData) {
                var storeContainer = document.querySelector('.store');
                var items = storeContainer.querySelectorAll('.item');

                for (var i = 0; i < items.length; i++) {
                    var nombreElement = items[i].querySelector('.nombre');
                    if (nombreElement.textContent === elementData.nombre) {
                        return true; // El elemento ya existe en la ventana "mascota.html"
                    }
                }

                return false; // El elemento no existe en la ventana "mascota.html"
            }


        //function cargarElementosGuardados() {
            var storeContainer = document.querySelector('.store');
           // var listaLocal = JSON.parse(localStorage.getItem('storeElements')) || []; //
            storeContainer.innerHTML = '';

            fetch('/' + userId +'/mascotas')
            .then(response => response.json())
            .then(data => {
                // Manejar la lista de tareas recibida en 'data'
                console.log('Lista de mascotas', data);
                data.forEach(function (elementData) {

                    if (!elementYaExisteEnMascota(elementData)) {
                        var nuevoItem = document.createElement('div');
                        nuevoItem.classList.add('item');
                        var nuevoItem = document.createElement('div');
                        nuevoItem.classList.add('item');

                        var nuevaImagen = document.createElement('img');
                        nuevaImagen.src = elementData.imagenPrincipal;
                        nuevaImagen.alt = 'Nuevo Producto';
                        nuevoItem.appendChild(nuevaImagen);

                        var nuevaSegundaImagen = document.createElement('img');
                        nuevaSegundaImagen.src = elementData.segundaImagen;
                        nuevaSegundaImagen.alt = 'Nuevo Producto-2';
                        nuevaSegundaImagen.classList.add('segunda-imagen');
                        nuevaSegundaImagen.style.display = 'none';
                        nuevoItem.appendChild(nuevaSegundaImagen);

                        var nuevoNombre = document.createElement('p');
                        nuevoNombre.classList.add('nombre');
                        nuevoNombre.textContent = elementData.nombre;
                        nuevoItem.appendChild(nuevoNombre);

                        var nuevoBotonActivar = document.createElement('button');
                        nuevoBotonActivar.classList.add('activar-button');
                        nuevoBotonActivar.textContent = 'Activar';
                        nuevoBotonActivar.onclick = function () {
                                console.log(elementData.nombre);
                                
                                console.log("Lista encontrada: " + elementData.nombre);
                                let userId = '<%= user.id %>' || '';
                                var imagenPrincipal = elementData.imagenPrincipal;
                                var segundaImagen = elementData.segundaImagen;
                                var nombre = elementData.nombre;
                                
                                
                                if (!userId) {
                                        throw new Error('No se encontró un ID en los datos del usuario');
                                }

     
                                    
                                fetch(`/${userId}/mascotaprincipal`)
                                        .then(response => {
                                            if (!response.ok) {
                                            throw new Error(`Error del servidor: ${response.status} - ${response.statusText}`);
                                            }
                                            return response.json();
                                        })
                                        .then(data => {
                                            let idPrincipal =data[0]._id;
                                            const dataToUpdate = {
                                                userId: userId,
                                                nombrePrincipal: nombre, 
                                                imagenPrincipal: imagenPrincipal,
                                                segundaImagen: segundaImagen
                                            };
                                            console.log("Nombre principal:" + dataToUpdate.userId);
                                                console.log("Nombre principal:" + dataToUpdate.nombrePrincipal); //Entrega el nombre correcto
                                                console.log("Id principal:" + idPrincipal); //Entrega el dato correcto
                                                console.log("Imagen principal:" + dataToUpdate.imagenPrincipal); 
                                                

                                            fetch(`/${userId}/mascotaprincipal/${idPrincipal}`, {
                                                method: 'PUT',
                                                headers: {
                                                    'Content-Type': 'application/json',
                                                },
                                                body: JSON.stringify(dataToUpdate),
                                                })
                                                .then(response => {
                                                    if (!response.ok) {
                                                    throw new Error(`Error del servidor: ${response.status} - ${response.statusText}`);
                                                    }
                                                    return response.json();
                                                })
                                                .then(updatedData => {
                                                    // Manipula los datos actualizados, por ejemplo, imprime en la consola.
                                                    console.log('Datos actualizados de mascota principal:', updatedData);
                                                })
                                                .catch(error => {
                                                    console.error('Error al realizar la solicitud:', error);
                                                });
                                         
                                        })
                                        .catch(error => {
                                            console.error('Error al realizar la solicitud:', error);
                                        });

                                    //window.location.href = "/"  + userId + "/mascotaprincipal/" + idPrincipal;
                                    
 

                                //localStorage.setItem("displayValue", "none");

                                fetch(`/${userId}/displayValue`)
                                .then(response => response.json())
                                .then(datap => {
                                    let iddisplayValue = datap[0]._id;
                                    let userId = '<%= user.id %>';

     
                                        const dataToUpdate = {
                                            userId: userId,
                                            displayValue: "none" ,
                                        };


                                        fetch(`/${userId}/displayValue/${iddisplayValue}`, {
                                                    method: 'PUT',
                                                    headers: {
                                                        'Content-Type': 'application/json',
                                                    },
                                                    body: JSON.stringify(dataToUpdate),
                                                    })
                                                    .then(response => {
                                                        if (!response.ok) {
                                                        throw new Error(`Error del servidor: ${response.status} - ${response.statusText}`);
                                                        }
                                                        return response.json();
                                                    })
                                                    .then(updatedData => {
                                                        console.log('Response JSON:', updatedData);
                                                        // Handle the updated data as needed
                                                    })
                                                    .catch(error => {
                                                        console.error('Error al realizar la solicitud:', error);
                                                    });                           
                                    
                                })
                                .catch(error => console.error('Error al obtener la lista de tareas:', error));
                                 window.location.href = "/"  + userId;
                  
                
                          
                        };
                        nuevoItem.appendChild(nuevoBotonActivar);

                        storeContainer.appendChild(nuevoItem);
              
                    }
  
            });

            })
            .catch(error => console.error('Error al obtener la lista de tareas:', error));

         


        //} 

         //cargarElementosGuardados();
        //}


        //let itemStore = parseInt(localStorage.getItem('itemstorevalue') || '3');  //
        /* var puntosTotalesGuardados = localStorage.getItem("puntosTotales"); //
        if (puntosTotalesGuardados) {
        puntosTotales = parseInt(puntosTotalesGuardados, 10);
        // Actualiza el texto en el elemento de puntos totales
        document.getElementById("puntosTotales").textContent = puntosTotales < 10 ? '0' + puntosTotales : puntosTotales; //
        } else {
            puntosTotales = 0; // Inicializa la variable si no hay puntos almacenados
        } */

        
        fetch(`/${userId}/puntos`)
        .then(response => response.json())
        .then(data => {
            
            console.log('Lista de tareas:', data);
            if (data) {
            puntosTotales = data[0].puntosTotales;
            document.getElementById("puntosTotales").textContent = puntosTotales < 10 ? '0' + puntosTotales : puntosTotales;
            } else {
                puntosTotales = 0; 
            }
            
        })
        .catch(error => console.error('Error al obtener la lista de tareas:', error));


        /*
        function activar(id) {
                    console.log("Activar botón. El id de la mascota es: " + id._id);
                    console.log("Lista encontrada: " + id.nombre);
                    let userId = '<%= user.id %>';
                    var imagenPrincipal = id.imagenPrincipal;
                    var segundaImagen = id.segundaImagen;
                    var nombre = id.nombre;
                    let idPrincipal = id._id;


                     if (!idPrincipal) {
                            throw new Error('No se encontró un ID en los datos de puntos');
                     }
                     if (!userId) {
                            throw new Error('No se encontró un ID en los datos del usuario');
                     }
                      


                    const dataToUpdate = {
                        userId: userId,
                        nombrePrincipal: nombre, 
                        imagenPrincipal: imagenPrincipal ,
                        segundaImagen: segundaImagen,
                    };

                        console.log("Nombre principal:" + dataToUpdate.nombrePrincipal); //Entrega el nombre correcto
                        console.log("Id principal:" + idPrincipal); //Entrega el dato correcto
                        console.log("Imagen principal:" + dataToUpdate.imagenPrincipal); 


                    
                    fetch(`/${userId}/mascotaprincipal/${idPrincipal}`)
                    .then(response => response.json())
                    .then(data => {
                        // Manejar la lista de tareas recibida en 'data'
                        console.log('Mascota Principal:', data);
                        // Aquí puedes realizar cualquier otra operación con la lista de tareas
                    })
                    .catch(error => console.error('Error al obtener la lista de tareas:', error));

                    fetch(`/${userId}/mascotaprincipal/${idPrincipal}`, {
                            method: 'PUT',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                                body: JSON.stringify(dataToUpdate),
                            })
                    .then(response => {
                                if (!response.ok) {
                                    throw new Error(`Error del servidor: ${response.status} - ${response.statusText}`);
                                }
                                    return response.json();
                                })
                    .then(updatedData => {
                                    console.log('Response JSON:', updatedData);
                                                
                                })
                    .catch(error => {
                                    console.error('Error al realizar la solicitud:', error);
                            });
                                        

                            /*
                            fetch(`/${userId}/mascotaprincipal/${idPrincipal}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(dataToUpdate),
                            }) */
                                                                

                    //localStorage.setItem('imagenPrincipal', imagenPrincipal);
                    //localStorage.setItem('segundaImagen', segundaImagen);
                    //localStorage.setItem('nombrePrincipal', nombre);
/*
                    localStorage.setItem("displayValue", "none");

                    // Redirige a otro HTML
                    //var userId = '<%= user.id %>';
                    //window.location.href = "/"  + userId;
                //}               
          

        } */



        /*
        function agregarNuevoItem() {

            // Obtener item
            itemStore++;
            localStorage.setItem('itemstorevalue', itemStore);  //

            //const storeContainer = document.querySelector('.store');


            const nuevoItem = document.createElement('div'); //
            nuevoItem.classList.add('item');  //

            // Crear una imagen para el nuevo elemento
            var nuevaImagen = document.createElement('img');
            nuevaImagen.src = localStorage.getItem('imagenPrincipalTraspaso'); ;
            nuevaImagen.alt = localStorage.getItem('nombreTraspasado');
            nuevoItem.appendChild(nuevaImagen);

            // Crea una segunda imagen para el nuevo elemento
            var nuevaSegundaImagen = document.createElement('img');
            nuevaSegundaImagen.src = localStorage.getItem('segundaImagenTraspaso');
            nuevaSegundaImagen.alt = localStorage.getItem('nombreTraspasado') + '-2';
            nuevaSegundaImagen.classList.add('segunda-imagen');
            nuevaSegundaImagen.style.display = 'none';
            nuevoItem.appendChild(nuevaSegundaImagen);

            // Crea un párrafo con la clase "nombre" y contenido para el nuevo elemento
            var nuevoNombreElement = document.createElement('p');
            nuevoNombreElement.classList.add('nombre');
            nuevoNombreElement.textContent = localStorage.getItem('nombreTraspasado'); 
            nuevoItem.appendChild(nuevoNombreElement);

            // Crea un botón de activación para el nuevo elemento
            var nuevoBotonActivar = document.createElement('button');
            nuevoBotonActivar.classList.add('activar-button');
            nuevoBotonActivar.textContent = 'Activar';
            nuevoBotonActivar.onclick = function () {
                activar(itemStore);
            };
            nuevoItem.appendChild(nuevoBotonActivar);

            var storeContainer = document.querySelector('.store');
            storeContainer.appendChild(nuevoItem);

            // Almacena la información del nuevo elemento localmente
            listaLocal.push({
                imagenPrincipal:  localStorage.getItem('imagenPrincipalTraspaso'),
                segundaImagen:  localStorage.getItem('segundaImagenTraspaso'),
                nombre: localStorage.getItem('nombreTraspasado'),
            });
            localStorage.setItem('storeElements', JSON.stringify(listaLocal));  //

            // Asigna el evento "Activar" al botón del nuevo elemento
            nuevoBotonActivar.onclick = function () {
                activar(itemStore);
            };
       } 
        

        var traspaso = localStorage.getItem('traspaso') === "true"; 
        if (traspaso) {
            //agregarNuevoItem();
            traspaso = false; 
            localStorage.setItem('traspaso', traspaso); 
           
        }  */





    


</script>


<script>
    function checklist(){
        var userId = '<%= user.id %>';
        window.location.href = "/checklist/" + userId;

    }

    function index(){
        var userId = '<%= user.id %>';
        window.location.href = "/"  + userId;

    }

    function cementerio(){
        var userId = '<%= user.id %>';
      window.location.href = "/cementerio/" + userId;

    }



    function tienda(){
        var userId = '<%= user.id %>';
        window.location.href = "/tienda/" + userId;
    }

    function cerrar(){
        var userId = '<%= user.id %>';
        window.location.href = "/"  + userId;

    }
</script>

    <!--  <h1>Hello, world!</h1> -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
  </body>
</html>